{"/home/travis/build/npmtest/node-npmtest-module-deps/test.js":"/* istanbul instrument in package npmtest_module_deps */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-module-deps/lib.npmtest_module_deps.js":"/* istanbul instrument in package npmtest_module_deps */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_module_deps = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_module_deps = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-module-deps/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-module-deps && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_module_deps */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_module_deps\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_module_deps.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_module_deps.rollup.js'] =\n            local.assetsDict['/assets.npmtest_module_deps.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_module_deps.__dirname + '/lib.npmtest_module_deps.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-module-deps/node_modules/module-deps/index.js":"var fs = require('fs');\nvar path = require('path');\nvar relativePath = require('cached-path-relative')\n\nvar browserResolve = require('browser-resolve');\nvar nodeResolve = require('resolve');\nvar detective = require('detective');\nvar through = require('through2');\nvar concat = require('concat-stream');\nvar parents = require('parents');\nvar combine = require('stream-combiner2');\nvar duplexer = require('duplexer2');\nvar xtend = require('xtend');\nvar defined = require('defined');\n\nvar inherits = require('inherits');\nvar Transform = require('readable-stream').Transform;\n\nmodule.exports = Deps;\ninherits(Deps, Transform);\n\nfunction Deps (opts) {\n    var self = this;\n    if (!(this instanceof Deps)) return new Deps(opts);\n    Transform.call(this, { objectMode: true });\n    \n    if (!opts) opts = {};\n    \n    this.basedir = opts.basedir || process.cwd();\n    this.persistentCache = opts.persistentCache || function (file, id, pkg, fallback, cb) {\n        process.nextTick(function () {\n            fallback(null, cb);\n        });\n    };\n    this.cache = opts.cache;\n    this.fileCache = opts.fileCache;\n    this.pkgCache = opts.packageCache || {};\n    this.pkgFileCache = {};\n    this.pkgFileCachePending = {};\n    this._emittedPkg = {};\n    this.visited = {};\n    this.walking = {};\n    this.entries = [];\n    this._input = [];\n    \n    this.paths = opts.paths || process.env.NODE_PATH || '';\n    if (typeof this.paths === 'string') {\n        var delimiter = path.delimiter || (process.platform === 'win32' ? ';' : ':');\n        this.paths = this.paths.split(delimiter);\n    }\n    this.paths = this.paths\n        .filter(Boolean)\n        .map(function (p) {\n            return path.resolve(self.basedir, p);\n        });\n    \n    this.transforms = [].concat(opts.transform).filter(Boolean);\n    this.globalTransforms = [].concat(opts.globalTransform).filter(Boolean);\n    this.resolver = opts.resolve || browserResolve;\n    this.options = xtend(opts);\n    if (!this.options.modules) this.options.modules = {};\n\n    // If the caller passes options.expose, store resolved pathnames for exposed\n    // modules in it. If not, set it anyway so it's defined later.\n    if (!this.options.expose) this.options.expose = {};\n    this.pending = 0;\n    this.inputPending = 0;\n    \n    var topfile = path.join(this.basedir, '__fake.js');\n    this.top = {\n        id: topfile,\n        filename: topfile,\n        paths: this.paths,\n        basedir: this.basedir\n    };\n}\n\nDeps.prototype._isTopLevel = function (file) {\n    var isTopLevel = this.entries.some(function (main) {\n        var m = relativePath(path.dirname(main), file);\n        return m.split(/[\\\\\\/]/).indexOf('node_modules') < 0;\n    });\n    if (!isTopLevel) {\n        var m = relativePath(this.basedir, file);\n        isTopLevel = m.split(/[\\\\\\/]/).indexOf('node_modules') < 0;\n    }\n    return isTopLevel;\n};\n\nDeps.prototype._transform = function (row, enc, next) {\n    var self = this;\n    if (typeof row === 'string') {\n        row = { file: row };\n    }\n    if (row.transform && row.global) {\n        this.globalTransforms.push([ row.transform, row.options ]);\n        return next();\n    }\n    else if (row.transform) {\n        this.transforms.push([ row.transform, row.options ]);\n        return next();\n    }\n    \n    self.pending ++;\n    var basedir = defined(row.basedir, self.basedir);\n    \n    if (row.entry !== false) {\n        self.entries.push(path.resolve(basedir, row.file || row.id));\n    }\n    \n    self.lookupPackage(row.file, function (err, pkg) {\n        if (err && self.options.ignoreMissing) {\n            self.emit('missing', row.file, self.top);\n            self.pending --;\n            return next();\n        }\n        if (err) return self.emit('error', err)\n        self.pending --;\n        self._input.push({ row: row, pkg: pkg });\n        next();\n    });\n};\n\nDeps.prototype._flush = function () {\n    var self = this;\n    var files = {};\n    self._input.forEach(function (r) {\n        var w = r.row, f = files[w.file || w.id];\n        if (f) {\n            f.row.entry = f.row.entry || w.entry;\n            var ex = f.row.expose || w.expose;\n            f.row.expose = ex;\n            if (ex && f.row.file === f.row.id && w.file !== w.id) {\n                f.row.id = w.id;\n            }\n        }\n        else files[w.file || w.id] = r;\n    });\n    \n    Object.keys(files).forEach(function (key) {\n        var r = files[key];\n        var pkg = r.pkg || {};\n        var dir = r.row.file ? path.dirname(r.row.file) : self.basedir;\n        if (!pkg.__dirname) pkg.__dirname = dir;\n        self.walk(r.row, xtend(self.top, {\n            filename: path.join(dir, '_fake.js')\n        }));\n    });\n    if (this.pending === 0) this.push(null);\n    this._ended = true;\n};\n\nDeps.prototype.resolve = function (id, parent, cb) {\n    var self = this;\n    var opts = self.options;\n    \n    if (xhas(self.cache, parent.id, 'deps', id)\n    && self.cache[parent.id].deps[id]) {\n        var file = self.cache[parent.id].deps[id];\n        var pkg = self.pkgCache[file];\n        if (pkg) return cb(null, file, pkg);\n        return self.lookupPackage(file, function (err, pkg) {\n            cb(null, file, pkg);\n        });\n    }\n    \n    parent.packageFilter = function (p, x) {\n        var pkgdir = path.dirname(x);\n        if (opts.packageFilter) p = opts.packageFilter(p, x);\n        p.__dirname = pkgdir;\n\n        return p;\n    };\n    \n    if (opts.extensions) parent.extensions = opts.extensions;\n    if (opts.modules) parent.modules = opts.modules;\n    \n    self.resolver(id, parent, function onresolve (err, file, pkg, fakePath) {\n        if (err) return cb(err);\n        if (!file) return cb(new Error(\n            'module not found: \"' + id + '\" from file '\n            + parent.filename\n        ));\n        \n        if (!pkg || !pkg.__dirname) {\n            self.lookupPackage(file, function (err, p) {\n                if (err) return cb(err);\n                if (!p) p = {};\n                if (!p.__dirname) p.__dirname = path.dirname(file);\n                self.pkgCache[file] = p;\n                onresolve(err, file, opts.packageFilter\n                    ? opts.packageFilter(p, p.__dirname) : p,\n                    fakePath\n                );\n            });\n        }\n        else cb(err, file, pkg, fakePath);\n    });\n};\n\nDeps.prototype.readFile = function (file, id, pkg) {\n    var self = this;\n    if (xhas(this.fileCache, file)) {\n        return toStream(this.fileCache[file]);\n    }\n    var rs = fs.createReadStream(file, {\n        encoding: 'utf8'\n    });\n    rs.on('error', function (err) { self.emit('error', err) });\n    this.emit('file', file, id);\n    return rs;\n};\n\nDeps.prototype.getTransforms = function (file, pkg, opts) {\n    if (!opts) opts = {};\n    var self = this;\n    \n    var isTopLevel;\n    if (opts.builtin || opts.inNodeModules) isTopLevel = false;\n    else isTopLevel = this._isTopLevel(file);\n    \n    var transforms = [].concat(isTopLevel ? this.transforms : [])\n        .concat(getTransforms(pkg, {\n            globalTransform: this.globalTransforms,\n            transformKey: this.options.transformKey\n        }))\n    ;\n    if (transforms.length === 0) return through();\n    \n    var pending = transforms.length;\n    var streams = [];\n    var input = through();\n    var output = through();\n    var dup = duplexer(input, output);\n    \n    for (var i = 0; i < transforms.length; i++) (function (i) {\n        makeTransform(transforms[i], function (err, trs) {\n            if (err) return self.emit('error', err)\n            streams[i] = trs;\n            if (-- pending === 0) done();\n        });\n    })(i);\n    return dup;\n    \n    function done () {\n        var middle = combine.apply(null, streams);\n        middle.on('error', function (err) {\n            err.message += ' while parsing file: ' + file;\n            if (!err.filename) err.filename = file;\n            self.emit('error', err);\n        });\n        input.pipe(middle).pipe(output);\n    }\n    \n    function makeTransform (tr, cb) {\n        var trOpts = {};\n        if (Array.isArray(tr)) {\n            trOpts = tr[1] || {};\n            tr = tr[0];\n        }\n        trOpts._flags = trOpts.hasOwnProperty('_flags') ? trOpts._flags : self.options;\n        if (typeof tr === 'function') {\n            var t = tr(file, trOpts);\n            self.emit('transform', t, file);\n            nextTick(cb, null, wrapTransform(t));\n        }\n        else {\n            loadTransform(tr, trOpts, function (err, trs) {\n                if (err) return cb(err);\n                cb(null, wrapTransform(trs));\n            });\n        }\n    }\n    \n    function loadTransform (id, trOpts, cb) {\n        var params = { basedir: path.dirname(file) };\n        nodeResolve(id, params, function nr (err, res, again) {\n            if (err && again) return cb && cb(err);\n            \n            if (err) {\n                params.basedir = pkg.__dirname;\n                return nodeResolve(id, params, function (e, r) {\n                    nr(e, r, true)\n                });\n            }\n            \n            if (!res) return cb(new Error(\n                'cannot find transform module ' + tr\n                + ' while transforming ' + file\n            ));\n            \n            var r = require(res);\n            if (typeof r !== 'function') {\n                return cb(new Error(\n                    'Unexpected ' + typeof r + ' exported by the '\n                    + JSON.stringify(res) + ' package. '\n                    + 'Expected a transform function.'\n                ));\n            }\n            \n            var trs = r(file, trOpts);\n            self.emit('transform', trs, file);\n            cb(null, trs);\n        });\n    }\n};\n\nDeps.prototype.walk = function (id, parent, cb) {\n    var self = this;\n    var opts = self.options;\n    this.pending ++;\n    \n    var rec = {};\n    var input;\n    if (typeof id === 'object') {\n        rec = xtend(id);\n        if (rec.entry === false) delete rec.entry;\n        id = rec.file || rec.id;\n        input = true;\n        this.inputPending ++;\n    }\n    \n    self.resolve(id, parent, function (err, file, pkg, fakePath) {\n        // this is checked early because parent.modules is also modified\n        // by this function.\n        var builtin = has(parent.modules, id);\n\n        if (rec.expose) {\n            // Set options.expose to make the resolved pathname available to the\n            // caller. They may or may not have requested it, but it's harmless\n            // to set this if they didn't.\n            self.options.expose[rec.expose] =\n                self.options.modules[rec.expose] = file;\n        }\n        if (pkg && !self._emittedPkg[pkg.__dirname]) {\n            self._emittedPkg[pkg.__dirname] = true;\n            self.emit('package', pkg);\n        }\n        \n        if (opts.postFilter && !opts.postFilter(id, file, pkg)) {\n            if (--self.pending === 0) self.push(null);\n            if (input) --self.inputPending;\n            return cb && cb(null, undefined);\n        }\n        if (err && rec.source) {\n            file = rec.file;\n            \n            var ts = self.getTransforms(file, pkg);\n            ts.pipe(concat(function (body) {\n                rec.source = body.toString('utf8');\n                fromSource(file, rec.source, pkg);\n            }));\n            return ts.end(rec.source);\n        }\n        if (err && self.options.ignoreMissing) {\n            if (--self.pending === 0) self.push(null);\n            if (input) --self.inputPending;\n            self.emit('missing', id, parent);\n            return cb && cb(null, undefined);\n        }\n        if (err) return self.emit('error', err);\n        if (self.visited[file]) {\n            if (-- self.pending === 0) self.push(null);\n            if (input) --self.inputPending;\n            return cb && cb(null, file);\n        }\n        self.visited[file] = true;\n        \n        if (rec.source) {\n            var ts = self.getTransforms(file, pkg);\n            ts.pipe(concat(function (body) {\n                rec.source = body.toString('utf8');\n                fromSource(file, rec.source, pkg);\n            }));\n            return ts.end(rec.source);\n        }\n        \n        var c = self.cache && self.cache[file];\n        if (c) return fromDeps(file, c.source, c.package, fakePath, Object.keys(c.deps));\n        \n        self.persistentCache(file, id, pkg, persistentCacheFallback, function (err, c) {\n            if (err) {\n                self.emit('error', err);\n                return;\n            }\n            fromDeps(file, c.source, c.package, fakePath, Object.keys(c.deps));\n        });\n\n        function persistentCacheFallback (dataAsString, cb) {\n            var stream = dataAsString ? toStream(dataAsString) : self.readFile(file, id, pkg);\n            stream\n                .pipe(self.getTransforms(fakePath || file, pkg, {\n                    builtin: builtin,\n                    inNodeModules: parent.inNodeModules\n                }))\n                .pipe(concat(function (body) {\n                    var src = body.toString('utf8');\n                    var deps = getDeps(file, src);\n                    if (deps) {\n                        cb(null, {\n                            source: src,\n                            package: pkg,\n                            deps: deps.reduce(function (deps, dep) {\n                                deps[dep] = true;\n                                return deps;\n                            }, {})\n                        });\n                    }\n                }));\n        }\n    });\n\n    function getDeps (file, src) {\n        return rec.noparse ? [] : self.parseDeps(file, src);\n    }\n\n    function fromSource (file, src, pkg, fakePath) {\n        var deps = getDeps(file, src);\n        if (deps) fromDeps(file, src, pkg, fakePath, deps);\n    }\n    \n    function fromDeps (file, src, pkg, fakePath, deps) {\n        var p = deps.length;\n        var resolved = {};\n        \n        if (input) --self.inputPending;\n        \n        (function resolve () {\n            if (self.inputPending > 0) return setTimeout(resolve);\n            deps.forEach(function (id) {\n                if (opts.filter && !opts.filter(id)) {\n                    resolved[id] = false;\n                    if (--p === 0) done();\n                    return;\n                }\n                var isTopLevel = self._isTopLevel(fakePath || file);\n                var current = {\n                    id: file,\n                    filename: file,\n                    paths: self.paths,\n                    package: pkg,\n                    inNodeModules: parent.inNodeModules || !isTopLevel\n                };\n                self.walk(id, current, function (err, r) {\n                    resolved[id] = r;\n                    if (--p === 0) done();\n                });\n            });\n            if (deps.length === 0) done();\n        })();\n        \n        function done () {\n            if (!rec.id) rec.id = file;\n            if (!rec.source) rec.source = src;\n            if (!rec.deps) rec.deps = resolved;\n            if (!rec.file) rec.file = file;\n            \n            if (self.entries.indexOf(file) >= 0) {\n                rec.entry = true;\n            }\n            self.push(rec);\n            \n            if (cb) cb(null, file);\n            if (-- self.pending === 0) self.push(null);\n        }\n    }\n};\n\nDeps.prototype.parseDeps = function (file, src, cb) {\n    if (this.options.noParse === true) return [];\n    if (/\\.json$/.test(file)) return [];\n    \n    if (Array.isArray(this.options.noParse)\n    && this.options.noParse.indexOf(file) >= 0) {\n        return [];\n    }\n    \n    try { var deps = detective(src) }\n    catch (ex) {\n        var message = ex && ex.message ? ex.message : ex;\n        this.emit('error', new Error(\n            'Parsing file ' + file + ': ' + message\n        ));\n        return;\n    }\n    return deps;\n};\n\nDeps.prototype.lookupPackage = function (file, cb) {\n    var self = this;\n    \n    var cached = this.pkgCache[file];\n    if (cached) return nextTick(cb, null, cached);\n    if (cached === false) return nextTick(cb, null, undefined);\n    \n    var dirs = parents(file ? path.dirname(file) : self.basedir);\n    \n    (function next () {\n        if (dirs.length === 0) {\n            self.pkgCache[file] = false;\n            return cb(null, undefined);\n        }\n        var dir = dirs.shift();\n        if (dir.split(/[\\\\\\/]/).slice(-1)[0] === 'node_modules') {\n            return cb(null, undefined);\n        }\n        \n        var pkgfile = path.join(dir, 'package.json');\n        \n        var cached = self.pkgCache[pkgfile];\n        if (cached) return nextTick(cb, null, cached);\n        else if (cached === false) return next();\n        \n        var pcached = self.pkgFileCachePending[pkgfile];\n        if (pcached) return pcached.push(onpkg);\n        pcached = self.pkgFileCachePending[pkgfile] = [];\n        \n        fs.readFile(pkgfile, function (err, src) {\n            if (err) return onpkg();\n            try { var pkg = JSON.parse(src) }\n            catch (err) {\n                return onpkg(new Error([\n                    err + ' while parsing json file ' + pkgfile\n                ].join('')))\n            }\n            pkg.__dirname = dir;\n            \n            self.pkgCache[pkgfile] = pkg;\n            self.pkgCache[file] = pkg;\n            onpkg(null, pkg);\n        });\n        \n        function onpkg (err, pkg) {\n            if (self.pkgFileCachePending[pkgfile]) {\n                var fns = self.pkgFileCachePending[pkgfile];\n                delete self.pkgFileCachePending[pkgfile];\n                fns.forEach(function (f) { f(err, pkg) });\n            }\n            if (err) cb(err)\n            else if (pkg) cb(null, pkg)\n            else {\n                self.pkgCache[pkgfile] = false;\n                next();\n            }\n        }\n    })();\n};\n \nfunction getTransforms (pkg, opts) {\n    var trx = [];\n    if (opts.transformKey) {\n        var n = pkg;\n        var keys = opts.transformKey;\n        for (var i = 0; i < keys.length; i++) {\n            if (n && typeof n === 'object') n = n[keys[i]];\n            else break;\n        }\n        if (i === keys.length) {\n            trx = [].concat(n).filter(Boolean);\n        }\n    }\n    return trx.concat(opts.globalTransform || []);\n}\n\nfunction nextTick (cb) {\n    var args = [].slice.call(arguments, 1);\n    process.nextTick(function () { cb.apply(null, args) });\n}\n\nfunction xhas (obj) {\n    if (!obj) return false;\n    for (var i = 1; i < arguments.length; i++) {\n        var key = arguments[i];\n        if (!has(obj, key)) return false;\n        obj = obj[key];\n    }\n    return true;\n}\n\nfunction toStream (dataAsString) {\n    var tr = through();\n    tr.push(dataAsString);\n    tr.push(null);\n    return tr;\n}\n\nfunction has (obj, key) {\n    return obj && Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction wrapTransform (tr) {\n    if (typeof tr.read === 'function') return tr;\n    var input = through(), output = through();\n    input.pipe(tr).pipe(output);\n    var wrapper = duplexer(input, output);\n    tr.on('error', function (err) { wrapper.emit('error', err) });\n    return wrapper;\n}\n","/home/travis/build/npmtest/node-npmtest-module-deps/node_modules/module-deps/bin/cmd.js":"#!/usr/bin/env node\nvar mdeps = require('../');\nvar subarg = require('subarg');\nvar fs = require('fs');\nvar path = require('path');\n\nvar argv = subarg(process.argv.slice(2), {\n    alias: { h: 'help', t: 'transform', g: 'globalTransform' }\n});\nif (argv.help) return usage(0);\n\nvar JSONStream = require('JSONStream');\n\nvar files = argv._.map(function (file) {\n    if (file === '-') return process.stdin;\n    return path.resolve(file);\n});\nvar md = mdeps(argv);\nmd.pipe(JSONStream.stringify()).pipe(process.stdout);\n\nfiles.forEach(function (file) { md.write(file) });\nmd.end();\n\nfunction usage (code) {\n    var r = fs.createReadStream(__dirname + '/usage.txt');\n    r.pipe(process.stdout);\n    if (code) r.on('end', function () { process.exit(code) });\n}\n"}